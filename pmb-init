#!/usr/bin/env bash
# Bash3 Boilerplate. Copyright (c) 2014, kvz.io

set -o errexit
set -o pipefail
set -o nounset
############### end of Boilerplate

# script to init a Pi installation for multiboot using "pmb"
# Requires env vars
# * size   - indicate the size of the resulting EXT4 partition
#          see the man page for sfdisk for units (e.g. size=10G)
# * device - which holds a fresh unbooted RpiOS (or other) install
#   (e.g. device=/dev/sdb or device=/dev/mmcblk0)

usage() {
    echo "device=/dev/sdb size=10G label=rpios $0 [settings_file] (for example)"
    echo "    -or-"
    echo "$0 [settings_file]"
    exit 1
}

# Check for first arg - settings file
if [[ -v 1 ]]
then
    if [ -e "$1" ]
    then
        echo sourcing "$1"
        # shellcheck disable=SC1090 # ShellCheck can't follow non-const...
        source "$1"
    else
        echo "$1 not found"
        usage
    fi
fi

# verify that needed CMD line args are provided
if [[ ! -v device ]] || [[ ! -v size ]] || [[ ! -v label ]]
then
    usage
fi

# Check for partition2 (EXT4 partition)

if [ -e "${device}2" ]
then
    part2=${device}2
elif [ -e "${device}p2" ]
then
    part2="${device}p2"
else
    echo "Can't find partition 2 on $device"
    usage
fi

# make sure $part2 is not mounted
umount "$part2" >/dev/null 2>&1 || true

## Resize root (EXT4) partition
echo  "size=${size}, type=L" | sfdisk -N 2 "${device}"
e2label "$part2" "$label"

## Use rest of storage device for an Extended partition
s=$(($(sfdisk --list "${device}" |grep "${part2}"|awk '{print $3}')+1))
echo  "start=$s type=Ex" | sfdisk -N 3 "${device}"

## Use all of Extended partition for a 
s=$(($(sfdisk --list "${device}" |grep "${part2}"|awk '{print $3}')+1))
s=$((s+8))
echo  "start=$s" | sfdisk -N 5 "${device}"
